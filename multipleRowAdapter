public class AdapterForNewHome extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
    private HomePage context;
    private List<Main> mainList;

    public AdapterForNewHome(HomePage context) {
        this.context = context;

        mainList = new ArrayList<>();
    }

    @NonNull
    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view;
        switch (viewType) {
            case 0:
                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.row_home_slider, parent, false);
                return new VholderSlider(view);
            case 1:
                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.row_home_category, parent, false);
                return new VholderCategory(view);
            case 2:
                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.row_home_deal_of_the_day, parent, false);
                return new VholderDealOfTheDay(view);
            case 3:
                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.row_home_offers, parent, false);
                return new VholderOffers(view);
            case 4:
                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.row_home_recommended_for_you, parent, false);
                return new VholderRecommendedForYou(view);
            case 5:
                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.row_home_festive_offers, parent, false);
                return new VholderFestiveOffers(view);
            default:
                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.row_home_slider, parent, false);
                return new VholderSlider(view);

        }
    }

    @Override
    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {

        if (mainList.get(position).getHeaderId().equalsIgnoreCase("0")) {
            setSlider((VholderSlider) holder, position);
        }
        if (mainList.get(position).getHeaderId().equalsIgnoreCase("1")) {
            setCategory((VholderCategory) holder, position);
        }
        if (mainList.get(position).getHeaderId().equalsIgnoreCase("2")) {
            setDealOfTheDay(((VholderDealOfTheDay) holder), position);
        }
        if (mainList.get(position).getHeaderId().equalsIgnoreCase("4")) {
            setRecommendedForYou(((VholderRecommendedForYou) holder), position);
        }
        if (mainList.get(position).getHeaderId().equalsIgnoreCase("3")) {
            setOffers(((VholderOffers) holder), position);
        }
        if (mainList.get(position).getHeaderId().equalsIgnoreCase("5")) {
            setFestiveOffers(((VholderFestiveOffers) holder), position);
        }

    }


    @Override
    public int getItemCount() {
        return mainList.size();
    }

    @Override
    public int getItemViewType(int position) {

        if (mainList.get(position).getHeaderId().equalsIgnoreCase("0")) {
            return 0;
        } else if (mainList.get(position).getHeaderId().equalsIgnoreCase("1")) {
            return 1;
        } else if (mainList.get(position).getHeaderId().equalsIgnoreCase("2")) {
            return 2;
        } else if (mainList.get(position).getHeaderId().equalsIgnoreCase("3")) {
            return 3;
        } else if (mainList.get(position).getHeaderId().equalsIgnoreCase("4")) {
            return 4;
        } else if (mainList.get(position).getHeaderId().equalsIgnoreCase("5")) {
            return 5;
        } else {
            return position;
        }
    }

    @Override
    public long getItemId(int position) {
        return super.getItemId(position);
    }

    public class VholderSlider extends RecyclerView.ViewHolder {
        ViewPager viewPager_Home_Slider;

        public VholderSlider(View itemView) {
            super(itemView);
            viewPager_Home_Slider = itemView.findViewById(R.id.viewPager_Home_Slider);
        }
    }

    public class VholderCategory extends RecyclerView.ViewHolder {
        private RecyclerView recycleview_popular_category;
        private AdapterForPopularCategories adapterForPopularCategories;
        private GridLayoutManager gridLayoutManagerPopularCategories;

        public VholderCategory(View itemView) {
            super(itemView);
            recycleview_popular_category = itemView.findViewById(R.id.recycleview_popular_category);
        }
    }

    public class VholderDealOfTheDay extends RecyclerView.ViewHolder {
        private RecyclerView recycleview_deal_of_the_day;
        private GridLayoutManager gridLayoutManagerDealOfTheDay;
        private AdapterForDealOfTheDay adapterForDealOfTheDay;
        private TextView tv_title;

        public VholderDealOfTheDay(View itemView) {
            super(itemView);
            tv_title = itemView.findViewById(R.id.tv_title);
            recycleview_deal_of_the_day = itemView.findViewById(R.id.recycleview_deal_of_the_day);
        }
    }

    public class VholderRecommendedForYou extends RecyclerView.ViewHolder {
        private RecyclerView recycleview_recomended_product;
        private LinearLayoutManager linearLayoutManagerForRecomendedProduct;
        private AdapterForRecomendedProductList adapterForRecomendedProductList;
        private TextView tv_title;

        public VholderRecommendedForYou(View itemView) {
            super(itemView);
            tv_title = itemView.findViewById(R.id.tv_title);
            recycleview_recomended_product = itemView.findViewById(R.id.recycleview_recomended_product);

        }
    }

    public class VholderOffers extends RecyclerView.ViewHolder {
        private RecyclerView recycleview_offer_product;
        private LinearLayoutManager linearLayoutManagerForAveilibleOffer;
        private AdapterForOfferList adapterForOfferList;

        public VholderOffers(View itemView) {
            super(itemView);

            recycleview_offer_product = itemView.findViewById(R.id.recycleview_aveileble_offer);
        }
    }

    public class VholderFestiveOffers extends RecyclerView.ViewHolder {
        private RecyclerView recycleview_festive_product;
        private LinearLayoutManager linearLayoutManagerFestiveOffers;
        private AdapterForFestiveProductList adapterForFestiveProductList;
        private TextView tv_title;

        public VholderFestiveOffers(View itemView) {
            super(itemView);
            tv_title = itemView.findViewById(R.id.tv_title);
            recycleview_festive_product = itemView.findViewById(R.id.recycleview_festive_product);
        }
    }

    private void setSlider(VholderSlider holder, int position) {
        holder.viewPager_Home_Slider.setAdapter(new AdapterForSliderInHomePage(context.getSupportFragmentManager(), mainList.get(position)));
        holder.viewPager_Home_Slider.setOffscreenPageLimit(mainList.get(position).getValues().size());
    }

    private void setCategory(VholderCategory holder, int position) {
        holder.adapterForPopularCategories = new AdapterForPopularCategories(context);
        holder.gridLayoutManagerPopularCategories = new GridLayoutManager(context, 2);
        holder.recycleview_popular_category.setLayoutManager((holder).gridLayoutManagerPopularCategories);
        holder.recycleview_popular_category.setAdapter(( holder).adapterForPopularCategories);
        holder.adapterForPopularCategories.getList(mainList.get(position));

    }

    private void setDealOfTheDay(VholderDealOfTheDay holder, int position) {
        holder.gridLayoutManagerDealOfTheDay = new GridLayoutManager(context, 2);
        holder.adapterForDealOfTheDay = new AdapterForDealOfTheDay(context);
        holder.recycleview_deal_of_the_day.setLayoutManager(holder.gridLayoutManagerDealOfTheDay);
        holder.recycleview_deal_of_the_day.setAdapter(holder.adapterForDealOfTheDay);
        holder.adapterForDealOfTheDay.getList(mainList.get(position));
        holder.tv_title.setText(mainList.get(position).getName());
    }

    private void setRecommendedForYou(VholderRecommendedForYou holder, int position) {
        holder.linearLayoutManagerForRecomendedProduct = new LinearLayoutManager(context, LinearLayoutManager.HORIZONTAL, false);
        holder.adapterForRecomendedProductList = new AdapterForRecomendedProductList(context);
        holder.recycleview_recomended_product.setLayoutManager(holder.linearLayoutManagerForRecomendedProduct);
        holder.recycleview_recomended_product.setAdapter(holder.adapterForRecomendedProductList);
        holder.adapterForRecomendedProductList.getList(mainList.get(position));
        holder.tv_title.setText(mainList.get(position).getName());
    }

    private void setOffers(VholderOffers holder, int position) {
        holder.linearLayoutManagerForAveilibleOffer = new LinearLayoutManager(context);
        holder.adapterForOfferList = new AdapterForOfferList(context);
        holder.recycleview_offer_product.setLayoutManager(holder.linearLayoutManagerForAveilibleOffer);
        holder.recycleview_offer_product.setAdapter(holder.adapterForOfferList);
        holder.adapterForOfferList.setList(mainList.get(position));
    }

    private void setFestiveOffers(VholderFestiveOffers holder, int position) {
        holder.linearLayoutManagerFestiveOffers = new LinearLayoutManager(context, LinearLayoutManager.HORIZONTAL, false);
        holder.adapterForFestiveProductList = new AdapterForFestiveProductList(context);
        holder.recycleview_festive_product.setLayoutManager(holder.linearLayoutManagerFestiveOffers);
        holder.recycleview_festive_product.setAdapter(holder.adapterForFestiveProductList);
        holder.adapterForFestiveProductList.getList(mainList.get(position));
    }

    public void getList(List<Main> list) {
        mainList.clear();
        mainList.addAll(list);
        notifyDataSetChanged();
    }
}
